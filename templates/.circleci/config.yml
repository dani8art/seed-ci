version: 2.1

references:
  js_deps_cache_key: &js_deps_cache_key v1-dependency-\{{ checksum "package-lock.json" }}

master_only: &master_only
  filters:
    branches:
      only: master

commands:
  git_authoring:
    description: Authoring git commit.
    steps:
      - run: git config --global push.default matching
      - run: git config --global user.email "{{git.email}}"
      - run: git config --global user.name "{{git.name}}"

jobs:
  build:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          keys:
            - *js_deps_cache_key
      - run: npm ci
      {{#if build.cmd}}
      - run: {{build.cmd}}
      {{/if}}
      - save_cache:
          paths:
            {{#each cache}}
            - {{this}}
            {{/each}}
          key: *js_deps_cache_key

  test:
    docker:
      - image: circleci/node:12
    {{#each test.dependencies}}
      - image: {{this}}
    {{/each}}
    environment:
      NODE_ENV: ci
    steps:
      - checkout
      - restore_cache:
          keys:
            - *js_deps_cache_key
      - run: {{test.cmd}}

  {{#if release.enable}}
  release:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - git_authoring
      - restore_cache:
          keys:
            - *js_deps_cache_key
      - run: npm run release
  {{/if}}

  {{#if deployment.enable}}
  deploy:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run: git pull  # get all the changes before release step changes.
    {{#if deployment.packageType "===" "docker"}}
      - setup_remote_docker
      - restore_cache:
          keys:
            - *js_deps_cache_key
      {{#if release.enable}}
      - run: echo 'export MAIN_TAG="$(npm run --silent get:version)"' >> $BASH_ENV
      {{else}}
      - run: echo 'export MAIN_TAG="$CIRCLE_BRANCH"' >> $BASH_ENV
      {{/if}}
      - run: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run: docker build -t {{deployment.docker.image}}:$MAIN_TAG .
      - run: docker push {{deployment.docker.image}}:$MAIN_TAG
      {{#each deployment.docker.additionalTags}}
      - run: docker tag {{@root.deployment.docker.image}}:$MAIN_TAG {{@root.deployment.docker.image}}:{{this}}
      - run: docker push {{@root.deployment.docker.image}}:{{this}}
      {{/each}}
    {{else}}
      - run:
          name: Authenticate against npm registry.
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ./.npmrc
      - run: npm publish
    {{/if}}

  {{/if}}

workflows:
  version: 2
  default:
    jobs:
      - build
      - test:
          requires:
            - build
      {{#if release.enable}}
      - release:
          <<: *master_only
          requires:
            - test
      {{/if}}
      {{#if deployment.enable}}
      - deploy:
          <<: *master_only
          requires:
          {{#if release.enable}}
            - release
          {{else}}
            - test
          {{/if}}
      {{/if}}
